import pandas as pd
import numpy as np
from sklearn.cluster import KMeans

df = pd.read_csv('dataset2_modified.csv')  

df['luminosity_r'] = 10**(-0.4 * df['r_band_mag'])

X = df[['redshift', 'luminosity_r']].dropna() 
kmeans = KMeans(n_clusters=3, random_state=42)
df['cluster'] = kmeans.fit_predict(X)

overall_stats = df[['redshift', 'luminosity_r']].agg(['mean', 'std', 'min', 'max']).T
overall_stats.reset_index(inplace=True)
overall_stats.columns = ['Metric', 'Mean', 'Std', 'Min', 'Max']

cluster_stats = df.groupby('cluster').agg({
    'redshift': ['mean', 'std', 'min', 'max'],
    'luminosity_r': ['mean', 'std', 'min', 'max']
})
cluster_stats.columns = ['_'.join(col).strip() for col in cluster_stats.columns]
cluster_stats.reset_index(inplace=True)

correlation_data = []
for cluster, group in df.groupby('cluster'):
    corr_redshift_luminosity = group['redshift'].corr(group['luminosity_r'])
    correlation_data.append({'cluster': cluster, 
                              'correlation_redshift_luminosity': corr_redshift_luminosity})
correlation_df = pd.DataFrame(correlation_data)

combined_stats = pd.merge(cluster_stats, correlation_df, on='cluster')

print("Overall Statistics:")
print(overall_stats)

print("\nCluster-Level Statistics with Correlations:")
print(combined_stats)

overall_stats.to_csv('overall_stats.csv', index=False)
combined_stats.to_csv('cluster_level_stats_with_correlations.csv', index=False)
